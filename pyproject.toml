[project]
name = "alleleTools"
version = "0.1.0"
authors = [
	{ name="Nicolas Mendoza Mejia", email="mendozamejian@gmail.com" }
]
description = "A set of tools to handle alleles from polymorphic genes"
readme = "readme.md"
requires-python = ">=3.9"
license-files = ["LICENSE"]
license = "GPL-3.0"
keywords = ["genetics", "bioinformatics"]
dependencies = [
	"biopython==1.85",
	"matplotlib==3.9.2",
	"numpy==1.26.4",
	"openpyxl==3.1.5",
	"pandas==2.2.3",
	"requests==2.32.4",
	"chardet==5.1.0",
	"yaspin==3.1.0",
]
classifiers=[
"Intended Audience :: Developers",
"Intended Audience :: Science/Research",
"Development Status :: 2 - Pre-Alpha",
"Operating System :: OS Independent",
"Environment :: Console",
"Programming Language :: Python",
"Programming Language :: Python :: 3",
"Programming Language :: Python :: 3.10",
"Programming Language :: Python :: 3.11",
"Programming Language :: Python :: 3.12",
"Programming Language :: Python :: 3.13",
"Topic :: Scientific/Engineering",
"Topic :: Scientific/Engineering :: Bio-Informatics",
"Topic :: Software Development :: Libraries :: Python Modules",
]


[project.optional-dependencies]
dev = [
	"pytest>=6.0",
	"pytest-cov",
	"black",
	"flake8",
]
test = [
	"pytest>=6.0",
	"pytest-cov",
]

[project.urls]
Homepage = "https://github.com/nmendozam/alleleTools"
Issues = "https://github.com/nmendozam/alleleTools/issues"
Documentation = "https://github.com/nmendozam/alleleTools#readme"


[project.scripts]
altools = "alleleTools.alleleTools:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["alleleTools"]

[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
	--verbose
	--tb=short
	--strict-markers
	--disable-warnings
	--cov=alleleTools
	--cov-report=html
	--cov-report=term-missing
	--cov-fail-under=80
"""
markers = """
	slow: marks tests as slow (deselect with '-m "not slow"')
	integration: marks tests as integration tests
	unit: marks tests as unit tests
	requires_network: marks tests that require network access
"""
filterwarnings = """
	ignore::DeprecationWarning
	ignore::PendingDeprecationWarning
"""

[tool.black]
line-length = 88
target-version = ['py39']

